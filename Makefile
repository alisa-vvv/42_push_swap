# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                            :+:    :+:            #
#                                                     +:+ +:+         +:+      #
#    By: avaliull <avaliull@student.codam.nl>       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/10/24 12:39:24 by avaliull          #+#    #+#              #
#    Updated: 2025/01/07 19:48:57 by avaliull       ########   odam.nl         #
#                                                                              #
# **************************************************************************** #

CFILES	=	push_swap.c\
		sorting/median_of_medians.c\
		sorting/sorting.c\
		sorting/three_or_less.c\
		list_ops/list_funcs.c\
		list_ops/list_wrappers.c\
		init_exit/init.c\
		init_exit/exit.c\
		test_funcs.c\
		operations/swaps.c\
		operations/pushes.c\
		operations/rotates.c\
		operations/reverse_rotates.c

OFILES	= $(CFILES:.c=.o)

LIBFT_PRINTF	= libft_printf/libftprintf.a

LIBFT_PRINTF_DIR = libft_printf

CC	= cc

CFLAGS	= -Wall -Wextra -Werror

RM	= rm -f

AR	= ar -rcs

NAME	= push_swap.a

#INPUT	

#INPUT = 19 5 54 77 87 4 69 71 100 59 60 1 85 29 68 22 24 49 99 61 93 18 74 11 55 95 30 36 46 23 8 20 50 57 79 3 35 65 82 26 42 80 45 25 88 92 40 62 53 12 86 76 67 72 98 44 21 6 83 73 84 56 15 47 27 58 16 10 70 38 81 34 66 41 2 32 31 39 13 37 28 64 96 91 89 97 90 17 94 48 14 52 63 78 33 51 7 9 43 75

INPUT = 491 35 332 347 708 723 958 665 494 187 113 669 326 769 445 33 533 978 137 966 687 90 59 402 701 695 945 772 503 856 863 525 306 887 547 659 749 570 781 171 921 41 69 131 660 230 176 905 703 20 907 527 918 892 498 133 762 933 57 392 329 288 979 262 58 431 580 935 120 410 732 12 47 180 621 820 350 591 652 271 397 552 103 798 296 596 386 124 2 395 387 362 492 379 318 620 910 239 178 199 442 868 45 891 692 817 957 19 453 158 893 757 916 775 514 118 965 661 864 925 205 495 575 946 423 214 403 519 208 684 926 49 190 109 579 555 238 291 511 861 578 160 858 521 768 744 785 535 99 755 84 157 117 909 31 954 448 149 369 61 464 952 81 32 822 425 360 424 235 451 825 299 603 534 34 127 883 794 615 681 566 97 293 163 890 624 678 210 313 743 359 818 323 202 300 134 650 420 10 487 172 339 429 496 846 850 328 897 722 166 771 400 558 939 135 823 865 13 598 581 605 876 985 164 310 37 250 932 728 537 295 21 200 121 219 130 564 449 486 340 457 151 839 195 951 968 994 501 374 355 733 186 758 489 303 169 349 586 56 874 694 444 319 724 913 253 507 346 249 500 599 72 686 551 316 197 356 700 811 259 418 198 680 419 801 459 405 25 231 721 816 375 980 746 44 30 577 812 251 243 366 689 826 159 838 98 529 595 477 426 107 752 975 292 320 809 672 226 833 365 484 277 467 155 380 11 1 779 421 656 148 367 568 699 388 628 714 654 753 670 62 997 468 878 93 223 972 750 761 653 331 478 707 280 417 252 209 961 147 690 358 85 763 321 536 538 474 622 736 258 55 284 600 720 931 26 574 516 635 572 493 879 787 834 895 802 630 731 790 989 476 588 502 39 119 204 778 770 844 765 854 370 441 447 949 432 836 698 618 305 96 745 102 179 673 244 315 162 261 990 651 840 683 63 485 101 737 140 751 584 829 914 606 111 539 27 414 553 314 6 860 422 217 88 766 512 517 542 608 141 609 394 947 215 224 138 24 881 7 454 89 383 337 343 760 430 704 640 569 807 203 153 211 601 443 78 125 866 282 499 896 52 181 705 308 682 940 589 999 612 275 613 638 325 247 964 185 889 729 693

#INPUT	= 1 3 2 9 6 8 10 5 7 4

#INPUT	= 1 3 2 6 8 5 7

#INPUT	= 1 3 2

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

all: $(NAME)

$(LIBFT_PRINTF):
	export CFLAGS
	$(MAKE) all -C $(LIBFT_PRINTF_DIR)

$(NAME): $(OFILES) $(LIBFT_PRINTF)
	cp $(LIBFT_PRINTF) $(NAME)
	$(AR) $(NAME) $(OFILES)

libs_clean:
	$(MAKE) clean -C $(LIBFT_PRINTF_DIR)

# this is for bonus
# bonus: all

clean: libs_clean
	$(RM) $(OFILES)

fclean:	clean
	$(RM) $(NAME)

re:	fclean all

test:	all
	$(CC) $(CFLAGS) $(NAME) ; ./a.out $(INPUT)
check:	all
	$(CC) $(CFLAGS) $(NAME) ; ./a.out $(INPUT) | ./checker_linux $(INPUT)

leak:	all
	$(CC) $(CFLAGS) $(NAME) ; valgrind -s --leak-check=full ./a.out $(INPUT)

.PHONY:	all clean fclean re libs_clean test leak check
